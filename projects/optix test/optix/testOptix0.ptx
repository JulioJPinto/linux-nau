//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__phong
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 optixLaunchParams[88];
.global .align 1 .b8 $str[45] = {61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 10, 0};
.global .align 1 .b8 $str1[29] = {78, 97, 117, 32, 82, 97, 121, 45, 84, 114, 97, 99, 105, 110, 103, 32, 72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 10, 0};
.global .align 1 .b8 $str2[21] = {76, 117, 110, 99, 104, 32, 115, 105, 122, 101, 58, 32, 37, 105, 32, 120, 32, 37, 105, 10, 0};
.global .align 1 .b8 $str3[28] = {67, 97, 109, 101, 114, 97, 32, 68, 105, 114, 101, 99, 116, 105, 111, 110, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 0};

.visible .entry __closesthit__phong(

)
{



	ret;
}

	// .globl	__anyhit__phong
.visible .entry __anyhit__phong(

)
{



	ret;
}

	// .globl	__miss__phong
.visible .entry __miss__phong(

)
{



	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 8 .b8 	__local_depot3[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<26>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<16>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r6), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r7), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r9), _optix_get_launch_dimension_x, ();
	// inline asm
	ld.const.u32 	%r12, [optixLaunchParams];
	add.s32 	%r13, %r12, %r6;
	cvt.rn.f32.u32	%f1, %r13;
	mul.ftz.f32 	%f2, %f1, 0f3DCCCCCD;
	cos.approx.ftz.f32 	%f3, %f2;
	cvt.ftz.f64.f32	%fd1, %f3;
	fma.rn.f64 	%fd2, %fd1, 0d3FE0000000000000, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64	%f4, %fd2;
	mul.ftz.f32 	%f5, %f4, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r4, %f5;
	mov.f32 	%f6, 0f3F800000;
	sub.ftz.f32 	%f7, %f6, %f5;
	cvt.rzi.ftz.s32.f32	%r5, %f7;
	or.b32  	%r14, %r7, %r6;
	or.b32  	%r15, %r14, %r12;
	setp.ne.s32	%p1, %r15, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 1
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd7, %SPL, 0;
	st.local.v2.u32 	[%rd7], {%r6, %r7};
	mov.u64 	%rd8, $str2;
	cvta.global.u64 	%rd9, %rd8;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.const.f32 	%f8, [optixLaunchParams+36];
	cvt.ftz.f64.f32	%fd3, %f8;
	ld.const.v2.f32 	{%f9, %f10}, [optixLaunchParams+40];
	cvt.ftz.f64.f32	%fd4, %f9;
	cvt.ftz.f64.f32	%fd5, %f10;
	st.local.f64 	[%rd7], %fd3;
	st.local.f64 	[%rd7+8], %fd4;
	st.local.f64 	[%rd7+16], %fd5;
	mov.u64 	%rd10, $str3;
	cvta.global.u64 	%rd11, %rd10;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 3
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 4

BB3_2:
	ld.const.u64 	%rd12, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd13, %rd12;
	mad.lo.s32 	%r21, %r7, %r9, %r6;
	mul.wide.u32 	%rd14, %r21, 4;
	add.s64 	%rd15, %rd13, %rd14;
	shl.b32 	%r22, %r5, 16;
	shl.b32 	%r23, %r4, 8;
	or.b32  	%r24, %r23, %r22;
	or.b32  	%r25, %r24, -16777216;
	st.global.u32 	[%rd15], %r25;
	ret;
}


