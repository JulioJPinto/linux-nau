//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 optixLaunchParams[80];
.global .align 1 .b8 $str[19] = {67, 97, 109, 32, 100, 105, 114, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str1[19] = {82, 97, 121, 32, 100, 105, 114, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 0};

.visible .entry __closesthit__radiance(

)
{
	.reg .f32 	%f<47>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<16>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd2, [%rd1];
	mul.wide.s32 	%rd3, %r1, 12;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u32 	%r4, [%rd4];
	ld.u32 	%r5, [%rd4+4];
	ld.u32 	%r6, [%rd4+8];
	ld.u64 	%rd5, [%rd1+8];
	mul.wide.u32 	%rd6, %r4, 16;
	add.s64 	%rd7, %rd5, %rd6;
	ld.v4.f32 	{%f1, %f2, %f3, %f4}, [%rd7];
	mul.wide.u32 	%rd8, %r5, 16;
	add.s64 	%rd9, %rd5, %rd8;
	ld.v4.f32 	{%f8, %f9, %f10, %f11}, [%rd9];
	mul.wide.u32 	%rd10, %r6, 16;
	add.s64 	%rd11, %rd5, %rd10;
	ld.v4.f32 	{%f15, %f16, %f17, %f18}, [%rd11];
	sub.ftz.f32 	%f22, %f8, %f1;
	sub.ftz.f32 	%f23, %f9, %f2;
	sub.ftz.f32 	%f24, %f10, %f3;
	sub.ftz.f32 	%f25, %f15, %f1;
	sub.ftz.f32 	%f26, %f16, %f2;
	sub.ftz.f32 	%f27, %f17, %f3;
	mul.ftz.f32 	%f28, %f23, %f27;
	mul.ftz.f32 	%f29, %f24, %f26;
	sub.ftz.f32 	%f30, %f28, %f29;
	mul.ftz.f32 	%f31, %f24, %f25;
	mul.ftz.f32 	%f32, %f22, %f27;
	sub.ftz.f32 	%f33, %f31, %f32;
	mul.ftz.f32 	%f34, %f22, %f26;
	mul.ftz.f32 	%f35, %f23, %f25;
	sub.ftz.f32 	%f36, %f34, %f35;
	mul.ftz.f32 	%f37, %f33, %f33;
	fma.rn.ftz.f32 	%f38, %f30, %f30, %f37;
	fma.rn.ftz.f32 	%f39, %f36, %f36, %f38;
	rsqrt.approx.ftz.f32 	%f40, %f39;
	mul.ftz.f32 	%f41, %f40, %f30;
	mul.ftz.f32 	%f42, %f40, %f33;
	mul.ftz.f32 	%f43, %f36, %f40;
	fma.rn.ftz.f32 	%f44, %f41, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f45, %f42, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f46, %f43, 0f3F000000, 0f3F000000;
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd12, %r2;
	shl.b64 	%rd13, %rd12, 32;
	cvt.u64.u32	%rd14, %r3;
	or.b64  	%rd15, %rd13, %rd14;
	st.f32 	[%rd15], %f44;
	st.f32 	[%rd15+4], %f45;
	st.f32 	[%rd15+8], %f46;
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<58>;
	.reg .b32 	%r<34>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<18>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd1, %SP, 0;
	add.u64 	%rd2, %SPL, 0;
	// inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// inline asm
	mov.u64 	%rd3, 1065353216;
	st.local.u32 	[%rd2+4], %rd3;
	st.local.u32 	[%rd2], %rd3;
	mov.u32 	%r7, 1065353216;
	st.local.u32 	[%rd2+8], %r7;
	cvt.rn.f32.s32	%f7, %r4;
	add.ftz.f32 	%f8, %f7, 0f3F000000;
	cvt.rn.f32.s32	%f9, %r5;
	add.ftz.f32 	%f10, %f9, 0f3F000000;
	ld.const.v2.u32 	{%r8, %r9}, [optixLaunchParams+16];
	cvt.rn.f32.s32	%f11, %r8;
	cvt.rn.f32.s32	%f12, %r9;
	div.approx.ftz.f32 	%f13, %f8, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.const.v2.f32 	{%f17, %f18}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f21, %f22}, [optixLaunchParams+56];
	ld.const.f32 	%f1, [optixLaunchParams+36];
	fma.rn.ftz.f32 	%f25, %f17, %f15, %f1;
	ld.const.v2.f32 	{%f26, %f27}, [optixLaunchParams+40];
	fma.rn.ftz.f32 	%f28, %f15, %f18, %f26;
	fma.rn.ftz.f32 	%f29, %f15, %f21, %f27;
	ld.const.v2.f32 	{%f30, %f31}, [optixLaunchParams+64];
	fma.rn.ftz.f32 	%f34, %f16, %f22, %f25;
	fma.rn.ftz.f32 	%f35, %f16, %f30, %f28;
	fma.rn.ftz.f32 	%f36, %f16, %f31, %f29;
	mul.ftz.f32 	%f37, %f35, %f35;
	fma.rn.ftz.f32 	%f38, %f34, %f34, %f37;
	fma.rn.ftz.f32 	%f39, %f36, %f36, %f38;
	rsqrt.approx.ftz.f32 	%f40, %f39;
	mul.ftz.f32 	%f4, %f34, %f40;
	mul.ftz.f32 	%f5, %f35, %f40;
	mul.ftz.f32 	%f6, %f36, %f40;
	or.b32  	%r11, %r5, %r4;
	ld.const.u32 	%r12, [optixLaunchParams];
	or.b32  	%r13, %r11, %r12;
	setp.ne.s32	%p1, %r13, 0;
	@%p1 bra 	BB3_2;

	cvt.ftz.f64.f32	%fd1, %f26;
	cvt.ftz.f64.f32	%fd2, %f27;
	cvt.ftz.f64.f32	%fd3, %f1;
	add.u64 	%rd4, %SP, 16;
	add.u64 	%rd5, %SPL, 16;
	st.local.f64 	[%rd5], %fd3;
	st.local.f64 	[%rd5+8], %fd1;
	st.local.f64 	[%rd5+16], %fd2;
	mov.u64 	%rd6, $str;
	cvta.global.u64 	%rd7, %rd6;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 0
	cvt.ftz.f64.f32	%fd4, %f4;
	st.local.f64 	[%rd5], %fd4;
	cvt.ftz.f64.f32	%fd5, %f5;
	st.local.f64 	[%rd5+8], %fd5;
	cvt.ftz.f64.f32	%fd6, %f6;
	st.local.f64 	[%rd5+16], %fd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 1

BB3_2:
	ld.const.u64 	%rd10, [optixLaunchParams+72];
	ld.const.v2.f32 	{%f50, %f51}, [optixLaunchParams+24];
	mov.u32 	%r22, 0;
	mov.u32 	%r21, 1;
	ld.const.f32 	%f43, [optixLaunchParams+32];
	shr.u64 	%rd12, %rd1, 32;
	cvt.u32.u64	%r23, %rd12;
	cvt.u32.u64	%r24, %rd1;
	mov.u32 	%r18, 255;
	mov.f32 	%f48, 0f60AD78EC;
	mov.f32 	%f49, 0f00000000;
	// inline asm
	call (%r16, %r17), _optix_trace_2, (%rd10, %f50, %f51, %f43, %f4, %f5, %f6, %f49, %f48, %f49, %r18, %r21, %r22, %r21, %r22, %r23, %r24);
	// inline asm
	ld.local.f32 	%f52, [%rd2];
	mul.ftz.f32 	%f53, %f52, 0f437FFD71;
	cvt.rzi.ftz.s32.f32	%r25, %f53;
	ld.local.f32 	%f54, [%rd2+4];
	mul.ftz.f32 	%f55, %f54, 0f437FFD71;
	cvt.rzi.ftz.s32.f32	%r26, %f55;
	ld.local.f32 	%f56, [%rd2+8];
	mul.ftz.f32 	%f57, %f56, 0f437FFD71;
	cvt.rzi.ftz.s32.f32	%r27, %f57;
	shl.b32 	%r28, %r26, 8;
	shl.b32 	%r29, %r27, 16;
	or.b32  	%r30, %r25, %r28;
	or.b32  	%r31, %r30, %r29;
	or.b32  	%r32, %r31, -16777216;
	mad.lo.s32 	%r33, %r8, %r5, %r4;
	ld.const.u64 	%rd14, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd15, %rd14;
	mul.wide.u32 	%rd16, %r33, 4;
	add.s64 	%rd17, %rd15, %rd16;
	st.global.u32 	[%rd17], %r32;
	ret;
}


